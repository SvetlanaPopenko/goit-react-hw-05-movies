{"version":3,"file":"static/js/991.e913ae6d.chunk.js","mappings":"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","sources":["components/API/FetchApi.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getTrendingMovie = async (pageNumber = 1, options) => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async (searchQuery, pageNumber, options) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import styled from \"styled-components\";\n\nexport const LoadButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;","import { LoadButton } from './Button.styled';\n\nexport const Button = ({ onClick }) => {\n  return (\n    <LoadButton onClick={onClick} type=\"button\">\n      More\n    </LoadButton>\n  );\n};\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const MovieContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const MovieItem = styled.div`\n  display: block;\n  border: 1px solid black;\n  border-radius: 4px;\n   box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    box-shadow: 2px 3px 5px #c7fc07, -1px -3px 5px #0f70de;\n    transform: scale(1.05);\n    cursor: zoom-in;\n    border: none;\n    }\n`;\nexport const MovieImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n  height:600px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h2`\nfont-size:26px;\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MovieContainer, StyledLink, MovieItem, MovieImage, MovieName } from './MovieGalleryItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieGalleryItem = ({\n  movie: { title, name, poster_path, release_date, id },\n}) => {\n  const location = useLocation();\n  return (\n    <MovieContainer>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <MovieItem>\n          <MovieImage\n            src={\n              poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : ''\n            }\n            alt={title || name}\n          />\n          <div>\n            <MovieName>{title || name}</MovieName>\n            <p>Release data : {release_date?.slice(0, 4) || 'not found'}</p>\n          </div>\n        </MovieItem>\n      </StyledLink>\n    </MovieContainer>\n  );\n};\n\nMovieGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    name: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    id: PropTypes.number,\n  }),\n};\n","import styled from \"styled-components\";\n\nexport const MovieGalleryList=styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n    margin: 0 auto;\n    flex-wrap:wrap;\n`\n\n","import { MovieGalleryItem } from 'components/MovieGalleryItem/MovieGalleryItem';\nimport PropTypes from 'prop-types';\nimport { MovieGalleryList } from './MoviesGallery.styled';\n\nexport const MoviesGallery = ({ movies }) => {\n  return (\n    <MovieGalleryList>\n      {movies.map(movie => (\n        <MovieGalleryItem key={movie.id} movie={movie} />\n      ))}\n    </MovieGalleryList>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from \"styled-components\";\n\nexport const SearchbarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;","import {\n  SearchbarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormLabel,\n  SearchFormInput,\n} from './SearchBar.styled';\nimport { BsSearch } from 'react-icons/bs';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(evt.target.search.value.trim().toLowerCase());\n    evt.currentTarget.reset();\n  };\n  return (\n    <SearchbarHeader>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton type=\"submit\">\n          <BsSearch width={60} height={60} />\n          <SearchFormLabel>Search</SearchFormLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          name=\"search\"\n          type=\"text\"\n          autocomplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      </SearchForm>\n    </SearchbarHeader>\n  );\n};\n\n","import { fetchSearchMovie } from 'components/API/FetchApi';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const controller = new AbortController();\n       const getMovieBySearch = async (query, page) => {\n           try {\n               if (!movieName||!query) {\n          return;\n        }\n           setIsLoading(true);\n        const data = await fetchSearchMovie(query, page, {\n          signal: controller.signal,\n        });\n\n        \n        setTotalPages(data.total_pages);\n        setMovies(prevMovies => {\n          return page === 1 ? data.results : [...prevMovies, ...data.results];\n        });\n               console.log(data.results);\n               return data;\n               \n      } catch (error) {\n        setMovies([]);\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    \n    getMovieBySearch(movieName, page);\n    return () => {\n      controller.abort();\n    };\n  }, [movieName, page]);\n\n  const handleOnSearch = query => {\n    if (query === '' || query === searchQuery) {\n      return;\n    }\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n    setMovies([]);\n    setPage(1);\n    setSearchQuery(query);\n  };\n\n  const onLoad = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n    if (movies) {\n        return (\n            <main>\n                <SearchBar movieName={movieName} onSubmit={handleOnSearch} />\n                <div>\n                    <MoviesGallery movies={movies} />\n                </div>\n                {isLoading && <Loader />}\n                {!!movies.length && page < totalPages && (\n                    <Button onClick={onLoad}/>\n                                        )}\n            </main>\n        );\n    }\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","getTrendingMovie","pageNumber","options","response","data","fetchSearchMovie","searchQuery","getMovieDetails","movieId","getMovieCredits","LoadButton","styled","Button","onClick","type","StyledLink","NavLink","MovieContainer","MovieItem","MovieImage","MovieName","MovieGalleryItem","movie","title","name","poster_path","release_date","id","location","useLocation","to","state","from","src","alt","slice","MovieGalleryList","MoviesGallery","movies","map","SearchbarHeader","SearchForm","SearchFormButton","SearchFormLabel","SearchFormInput","SearchBar","onSubmit","evt","preventDefault","target","search","value","trim","toLowerCase","currentTarget","reset","width","height","autocomplete","autoFocus","placeholder","useState","setMovies","setSearchQuery","page","setPage","totalPages","setTotalPages","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","controller","AbortController","getMovieBySearch","query","signal","total_pages","prevMovies","results","console","log","abort","Loader","length","prevPage"],"sourceRoot":""}