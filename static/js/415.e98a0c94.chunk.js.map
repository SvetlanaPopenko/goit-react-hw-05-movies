{"version":3,"file":"static/js/415.e98a0c94.chunk.js","mappings":"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","sources":["components/API/FetchApi.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getTrendingMovie = async (pageNumber = 1, options) => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async (searchQuery, pageNumber, options) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import styled from \"styled-components\";\n\nexport const LoadButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;","import { LoadButton } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClick }) => {\n  return (\n    <LoadButton onClick={onClick} type=\"button\">\n      More\n    </LoadButton>\n  );\n};\n\nButton.propTypes = {\n  onclick:PropTypes.func,\n}","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const MovieContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const MovieItem = styled.div`\n  display: block;\n  border: 1px solid black;\n  border-radius: 4px;\n   box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    box-shadow: 2px 3px 5px #c7fc07, -1px -3px 5px #0f70de;\n    transform: scale(1.05);\n    cursor: zoom-in;\n    border: none;\n    }\n`;\nexport const MovieImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n  height:600px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h2`\nfont-size:26px;\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { MovieContainer, StyledLink, MovieItem, MovieImage, MovieName } from './MovieGalleryItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieGalleryItem = ({\n  movie: { title, name, poster_path, release_date, id },\n}) => {\n  const location = useLocation();\n  return (\n    <MovieContainer>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <MovieItem>\n          <MovieImage\n            src={\n              poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : ''\n            }\n            alt={title || name}\n          />\n          <div>\n            <MovieName>{title || name}</MovieName>\n            <p>Release data : {release_date?.slice(0, 4) || 'not found'}</p>\n          </div>\n        </MovieItem>\n      </StyledLink>\n    </MovieContainer>\n  );\n};\n\nMovieGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    name: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    id: PropTypes.number,\n  }),\n};\n","import styled from \"styled-components\";\n\nexport const MovieGalleryList=styled.ul`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 20px;\n    margin: 0 auto;\n    flex-wrap:wrap;\n`\n\n","import { MovieGalleryItem } from 'components/MovieGalleryItem/MovieGalleryItem';\nimport PropTypes from 'prop-types';\nimport { MovieGalleryList } from './MoviesGallery.styled';\n\nexport const MoviesGallery = ({ movies }) => {\n  return (\n    <MovieGalleryList>\n      {movies.map(movie => (\n        <MovieGalleryItem key={movie.id} movie={movie} />\n      ))}\n    </MovieGalleryList>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nexport const SectionMain=styled.section`\n  padding: 30px 0;\n`\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 32px;\n`;","import PropTypes from 'prop-types';\nimport { SectionMain, Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionMain>\n      <div>\n        <Title>{title}</Title>\n        {children}\n      </div>\n    </SectionMain>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovie } from 'components/API/FetchApi';\nimport { Section } from 'components/Section/Section';\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { Button } from 'components/Button/Button';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const onLoad = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n    setIsLoading(true);\n    const fetchMovie = async page => {\n      try {\n        const data = await getTrendingMovie(page, {\n          signal: controller.signal,\n        });\n        setTotalPages(data.total_pages);\n        setMovies(prevMovies => {\n          return page === 1 ? data.results : [...prevMovies, ...data.results];\n        });\n        return data.results;\n        \n      } catch (error) {\n        setMovies([]);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie(page);\n    return () => {\n      controller.abort();\n    };\n  }, [page]);\n\n  if (movies) {\n    return (\n      <main>\n        <Section>Trending movies</Section>\n        <div>{!!movies.length && <MoviesGallery movies={movies} />}</div>\n        {!!movies.length && page <= totalPages && (<Button onClick={onLoad} />)}\n        {isLoading && <Loader />}\n      </main>\n    );\n  }\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","getTrendingMovie","pageNumber","options","response","data","fetchSearchMovie","searchQuery","getMovieDetails","movieId","getMovieCredits","getMovieReviews","LoadButton","styled","Button","onClick","type","StyledLink","NavLink","MovieContainer","MovieItem","MovieImage","MovieName","MovieGalleryItem","movie","title","name","poster_path","release_date","id","location","useLocation","to","state","from","src","alt","slice","MovieGalleryList","MoviesGallery","movies","map","SectionMain","Title","Section","children","useState","setMovies","page","setPage","isLoading","setIsLoading","totalPages","setTotalPages","useEffect","controller","AbortController","fetchMovie","signal","total_pages","prevMovies","results","console","log","message","abort","length","prevPage"],"sourceRoot":""}