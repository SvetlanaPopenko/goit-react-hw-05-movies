{"version":3,"file":"static/js/336.ded2417d.chunk.js","mappings":"mTAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAU,mCAEVC,EAAgB,mCAAG,2GAAOC,EAAP,+BAAoB,EAAGC,EAAvB,gCACPJ,EAAAA,EAAAA,IAAA,mCACOC,EADP,iBACuBE,GAC5CC,GAH4B,cACxBC,EADwB,yBAKvBA,EAASC,MALc,2CAAH,qDAQhBC,EAAgB,mCAAG,WAAOC,EAAaL,EAAYC,GAAhC,uFACPJ,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCO,EADnC,iBACuDL,EADvD,wBAErBC,GAH4B,cACxBC,EADwB,yBAKvBA,EAASC,MALc,2CAAH,0DAQhBG,EAAe,mCAAG,WAAOC,EAASN,GAAhB,uFACNJ,EAAAA,EAAAA,IAAA,gBACZU,EADY,oBACOT,EADP,mBAErBG,GAH2B,cACvBC,EADuB,yBAKtBA,EAASC,MALa,2CAAH,wDAQfK,EAAe,mCAAG,WAAOD,EAASN,GAAhB,uFACNJ,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeT,EADf,mBAErBG,GAH2B,cACvBC,EADuB,yBAKtBA,EAASC,MALa,2CAAH,wDAQfM,EAAe,mCAAG,WAAOF,EAASN,GAAhB,uFACNJ,EAAAA,EAAAA,IAAA,gBACZU,EADY,4BACeT,EADf,0BAErBG,GAH2B,cACvBC,EADuB,yBAKtBA,EAASC,MALa,2CAAH,uD,gKCnCfO,EAAaC,EAAAA,GAAAA,GAAH,gLASVC,EAAcD,EAAAA,GAAAA,GAAH,+DAIXE,EAAgBF,EAAAA,GAAAA,EAAH,+D,SCZbG,EAAc,SAAC,GAAqC,IAAD,IAAlCC,OAAUC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,QAC9C,OACE,UAACP,EAAD,YACE,SAACE,EAAD,UAAcI,KACd,SAACH,EAAD,UAAgBI,MAGrB,E,8BCRYC,EAAcP,EAAAA,GAAAA,EAAH,+DAKXQ,EAAcR,EAAAA,GAAAA,GAAH,mFCsDxB,EApDgB,WACd,OAA8BS,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QAwBR,OAtBAmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACvBJ,GAAa,GACb,IAAMK,EAAgB,mCAAG,WAAMtB,GAAN,iGAEFE,EAAAA,EAAAA,IAAgBF,EAAS,CAC1CuB,OAAQH,EAAWG,SAHA,cAEf3B,EAFe,OAKrBmB,EAAWnB,EAAK4B,SALK,kBAMd5B,GANc,gCAQrB6B,QAAQC,IAAR,MARqB,yBAUrBT,GAAa,GAVQ,4EAAH,sDActB,OADAK,EAAiBtB,GACV,WACLoB,EAAWO,OACZ,CACF,GAAE,CAAC3B,KAGF,UAAC4B,EAAA,EAAD,CAASC,MAAM,UAAf,WACE,SAACjB,EAAD,UACGE,EAAQgB,KAAI,SAAAtB,GAAM,OACjB,SAACD,EAAD,CAA6BC,OAAQA,GAAnBA,EAAOuB,GADR,MAIpBf,IAAa,SAACgB,EAAA,EAAD,MACXlB,EAAQmB,SACT,SAACtB,EAAD,qDAIP,C,4FC/CYuB,EAAc9B,EAAAA,GAAAA,QAAH,4CAGX+B,EAAQ/B,EAAAA,GAAAA,GAAH,mE,SCDLwB,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOO,EAAe,EAAfA,SAC/B,OACE,SAACF,EAAD,WACE,UAAC,KAAD,YACE,SAACC,EAAD,UAAQN,IACPO,MAIR,C","sources":["components/API/FetchApi.jsx","components/ReviewsItem/ReviewsItem.styled.jsx","components/ReviewsItem/ReviewsItem.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getTrendingMovie = async (pageNumber = 1, options) => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async (searchQuery, pageNumber, options) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const ReviewItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  gap: 20px;\n  border-radius: 10px;\n  border: 1px solid blue;\n  padding: 20px;\n`;\nexport const ReviewTitle = styled.h3`\n  font-size: 26px;\n  color: #cb861e;\n`;\nexport const ReviewContent = styled.p`\n  font-size: 20px;\n  color: #614c02;\n`;\n","import PropTypes from 'prop-types';\nimport { ReviewContent, ReviewItem, ReviewTitle } from './ReviewsItem.styled';\n\nexport const ReviewsItem = ({ review: { author, content } }) => {\n  return (\n    <ReviewItem>\n      <ReviewTitle>{author}</ReviewTitle>\n      <ReviewContent>{content}</ReviewContent>\n    </ReviewItem>\n  );\n};\n\nReviewsItem.propTypes = {\n  review: PropTypes.shape({\n    author: PropTypes.string,\n    content: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const ReviewError = styled.p`\n  font-size: 20px;\n  color: #614c02;\n`;\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import { getMovieReviews } from 'components/API/FetchApi';\nimport { Loader } from 'components/Loader/Loader';\nimport { ReviewsItem } from 'components/ReviewsItem/ReviewsItem';\nimport { Section } from 'components/Section/Section';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewError, ReviewsList } from './Reviews.styled';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    setIsLoading(true);\n    const fetchMovieReview = async movieId => {\n      try {\n        const data = await getMovieReviews(movieId, {\n          signal: controller.signal,\n        });\n        setReviews(data.results);\n        return data;\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieReview(movieId);\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Section title=\"Reviews\">\n      <ReviewsList>\n        {reviews.map(review => (\n          <ReviewsItem key={review.id} review={review} />\n        ))}\n      </ReviewsList>\n      {isLoading && <Loader />}\n      {!!reviews.length || (\n        <ReviewError>We don`t have reviews for this movie</ReviewError>\n      )}\n    </Section>\n  );\n};\n\nReviews.propTypes = {\n  isLoading: PropTypes.bool,\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      author: PropTypes.string,\n    })\n  ),\n};\n\nexport default Reviews;\n","import styled from 'styled-components';\n\nexport const SectionMain = styled.section`\n  padding: 30px 0;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 32px;\n`;\n","import { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport PropTypes from 'prop-types';\nimport { SectionMain, Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionMain>\n      <Container>\n        <Title>{title}</Title>\n        {children}\n      </Container>\n    </SectionMain>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n"],"names":["axios","API_KEY","getTrendingMovie","pageNumber","options","response","data","fetchSearchMovie","searchQuery","getMovieDetails","movieId","getMovieCredits","getMovieReviews","ReviewItem","styled","ReviewTitle","ReviewContent","ReviewsItem","review","author","content","ReviewError","ReviewsList","useState","reviews","setReviews","isLoading","setIsLoading","useParams","useEffect","controller","AbortController","fetchMovieReview","signal","results","console","log","abort","Section","title","map","id","Loader","length","SectionMain","Title","children"],"sourceRoot":""}