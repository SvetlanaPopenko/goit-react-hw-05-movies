{"version":3,"file":"static/js/672.c719ccf9.chunk.js","mappings":"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","sources":["components/API/FetchApi.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/BackLink.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getTrendingMovie = async (pageNumber = 1, options) => {\n  try {\n    const response = await axios.get(\n      `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovie = async (searchQuery, options) => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async (movieId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async (movieId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from \"styled-components\";\n\nexport const Loading = styled.div`\n  position: fixed;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: #2813e8;\n`;","import { RotatingLines } from 'react-loader-spinner';\nimport { createPortal } from 'react-dom';\nimport { Loading } from './Loader.styled'\n\nconst Spiner = document.querySelector('#loader');\n\nexport const Loader = () => {\n  return createPortal(\n    <Loading>\n      <RotatingLines\n        strokeColor=\"grey\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </Loading>,\n    Spiner\n  );\n};\n","import { HiArrowLeft } from \"react-icons/hi\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};","import PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  card: {\n    title,\n    name,\n    poster_path,\n    overview,\n    genres,\n    vote_average,\n    release_date,\n  },\n}) => {\n  return (\n    <div>\n      <div>\n        <img\n          src={\n            poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : ''\n          }\n          alt={title || name}\n        />\n      </div>\n      <div>\n        <h2>{title || name}</h2>\n        <p>Release data : { release_date?.slice(0, 4) || 'not found'}</p>\n        <p>\n          User score:<span>{(vote_average * 10).toFixed(1)}%</span>\n        </p>\n        <p>\n          Overview:<span>{overview}</span>\n        </p>\n        <p>\n          Genres:\n          <span>\n            {genres\n              .map(genre => {\n                return genre.name;\n              })\n              .join(', ')}\n          </span>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nMovieCard.propTypes = {\n  card: PropTypes.shape({\n    title: PropTypes.string,\n    name: PropTypes.string,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n    vote_average: PropTypes.number,\n    release_date: PropTypes.string,\n  }),\n};\n","import { useLocation, useParams } from 'react-router-dom';\nimport { Link, Outlet } from 'react-router-dom';\nimport { BackLink } from 'components/BackLink';\nimport { useEffect, useRef, useState, Suspense } from 'react';\nimport { getMovieDetails } from 'components/API/FetchApi';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieDetail, setMovieDetail] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const { location } = useLocation();\n  const ref = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const controller = new AbortController();\n    setIsLoading(true);\n    const getMovieById = async movieId => {\n      try {\n        const data = await getMovieDetails(movieId, {\n          signal: controller.signal,\n        });\n        setMovieDetail(data);\n        return data;\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovieById(movieId);\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  if (movieDetail) {\n    return (\n      <div>\n        <div>\n          <BackLink to={ref.current}>Back</BackLink>\n          {movieDetail && <MovieCard data={movieDetail} />}\n        </div>\n        {isLoading && <Loader />}\n        <div>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: location.state.from }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <link to=\"reviews\" state={{ from: location.state.from }}>\n                Reviews\n              </link>\n            </li>\n          </ul>\n        </div>\n        <Suspense fallback={<Loader/>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    );\n  }\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","getTrendingMovie","pageNumber","options","response","data","console","log","getMovieDetails","movieId","Loading","styled","Spiner","document","querySelector","Loader","createPortal","strokeColor","strokeWidth","animationDuration","width","visible","StyledLink","Link","BackLink","to","children","size","MovieCard","card","title","name","poster_path","overview","genres","vote_average","release_date","src","alt","slice","toFixed","map","genre","join","useState","movieDetail","setMovieDetail","isLoading","setIsLoading","useParams","location","useLocation","ref","useRef","state","from","useEffect","controller","AbortController","getMovieById","signal","abort","current","Suspense","fallback"],"sourceRoot":""}