{"version":3,"file":"static/js/415.e50af742.chunk.js","mappings":"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","sources":["components/API/FetchApi.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getTrendingMovie = async (pageNumber = 1, options) => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async (searchQuery, pageNumber, options) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const LoadButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  margin: 0 auto;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import { LoadButton } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ onClick }) => {\n  return (\n    <LoadButton onClick={onClick} type=\"button\">\n      More\n    </LoadButton>\n  );\n};\n\nButton.propTypes = {\n  onclick: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const MovieContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const MovieItem = styled.div`\n  display: block;\n  border: 1px solid black;\n  border-radius: 4px;\n  width: 360px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    box-shadow: 2px 3px 5px #c7fc07, -1px -3px 5px #0f70de;\n    transform: scale(1.05);\n    cursor: zoom-in;\n    border: none;\n  }\n`;\nexport const MovieImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n  height: 540px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieName = styled.h2`\n  font-size: 26px;\n  padding: 7px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: #cb861e;\n  height: 60px;\n  white-space: pre-wrap;\n`;\nexport const MovieRelease = styled.p`\n  font-size: 26px;\n  padding: 10px;\n  color: #614c02;\n  font-weight: 600;\n`;\nexport const MovieInfo = styled.div`\n  /* padding:10px; */\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieContainer,\n  StyledLink,\n  MovieItem,\n  MovieImage,\n  MovieName,\n  MovieRelease,\n  MovieInfo,\n} from './MovieGalleryItem.styled';\nimport PropTypes from 'prop-types';\nimport film from '../../images/film.jpg';\n\nexport const MovieGalleryItem = ({\n  movie: { title, name, poster_path, release_date, id },\n}) => {\n  const location = useLocation();\n  return (\n    <MovieContainer>\n      <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n        <MovieItem>\n          <MovieImage\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : film\n            }\n            alt={title || name}\n          />\n          <MovieInfo>\n            <MovieName>{title || name}</MovieName>\n            <MovieRelease>\n              Release data : {release_date?.slice(0, 4) || 'not found'}\n            </MovieRelease>\n          </MovieInfo>\n        </MovieItem>\n      </StyledLink>\n    </MovieContainer>\n  );\n};\n\nMovieGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    name: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    id: PropTypes.number,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const MovieGalleryList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin: 0 auto;\n  flex-wrap: wrap;\n`;\n","import { MovieGalleryItem } from 'components/MovieGalleryItem/MovieGalleryItem';\nimport PropTypes from 'prop-types';\nimport { MovieGalleryList } from './MoviesGallery.styled';\n\nexport const MoviesGallery = ({ movies }) => {\n  return (\n    <MovieGalleryList>\n      {movies.map(movie => (\n        <MovieGalleryItem key={movie.id} movie={movie} />\n      ))}\n    </MovieGalleryList>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};\n","import styled from 'styled-components';\n\nexport const SectionMain = styled.section`\n  padding: 30px 0;\n`;\nexport const Title = styled.h1`\n  text-align: center;\n  font-size: 32px;\n`;\n","import { Container } from 'components/SharedLayout/SharedLayout.styled';\nimport PropTypes from 'prop-types';\nimport { SectionMain, Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionMain>\n      <Container>\n        <Title>{title}</Title>\n        {children}\n      </Container>\n    </SectionMain>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovie } from 'components/API/FetchApi';\nimport { Section } from 'components/Section/Section';\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { Button } from 'components/Button/Button';\nimport PropTypes from 'prop-types';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const onLoad = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n    setIsLoading(true);\n\n    const fetchMovie = async page => {\n      try {\n        const data = await getTrendingMovie(page, {\n          signal: controller.signal,\n        });\n        setTotalPages(data.total_pages);\n        setMovies(prevMovies => {\n          return page === 1 ? data.results : [...prevMovies, ...data.results];\n        });\n        return data.results;\n      } catch (error) {\n        setMovies([]);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie(page);\n    return () => {\n      controller.abort();\n    };\n  }, [page]);\n\n  if (movies) {\n    return (\n      <main>\n        <Section title=\"Trending movies\">\n          {!!movies.length && <MoviesGallery movies={movies} />}\n        </Section>\n        {!!movies.length && page <= totalPages && <Button onClick={onLoad} />}\n        {isLoading && <Loader />}\n      </main>\n    );\n  }\n};\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      title: PropTypes.string,\n      release_date: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ),\n  page: PropTypes.number,\n  isLoadoing: PropTypes.bool,\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","getTrendingMovie","pageNumber","options","response","data","fetchSearchMovie","searchQuery","getMovieDetails","movieId","getMovieCredits","getMovieReviews","LoadButton","styled","Button","onClick","type","StyledLink","NavLink","MovieContainer","MovieItem","MovieImage","MovieName","MovieRelease","MovieInfo","MovieGalleryItem","movie","title","name","poster_path","release_date","id","location","useLocation","to","state","from","src","film","alt","slice","MovieGalleryList","MoviesGallery","movies","map","SectionMain","Title","Section","children","useState","setMovies","page","setPage","isLoading","setIsLoading","totalPages","setTotalPages","useEffect","controller","AbortController","fetchMovie","signal","total_pages","prevMovies","results","console","log","message","abort","length","prevPage"],"sourceRoot":""}