{"version":3,"file":"static/js/758.30de3082.chunk.js","mappings":"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","sources":["components/API/FetchApi.jsx","components/CastItem/CastItem.styled.jsx","components/CastItem/CastItem.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getTrendingMovie = async (pageNumber = 1, options) => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchSearchMovie = async (searchQuery, pageNumber, options) => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async (movieId, options) => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n    options\n  );\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const CastGalleryItemWrp = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const CastImage = styled.img`\n  width: 360px;\n  height: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    box-shadow: 2px 3px 5px #c7fc07, -1px -3px 5px #0f70de;\n    transform: scale(1.05);\n    cursor: zoom-in;\n  }\n`;\nexport const CastDesc = styled.p`\n  font-size: 18px;\n  padding: 10px;\n  color: #614c02;\n  text-align: center;\n`;\nexport const CastTitle = styled.h2`\n  padding: 10px;\n  color: #cb861e;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport placeholder from '../../images/placeholder.jpg'\nimport { CastDesc, CastGalleryItemWrp, CastImage,CastTitle } from './CastItem.styled';\n\nexport const CastItem = ({ cast: { name, character, profile_path }, }) => {\n  return (\n    <CastGalleryItemWrp>\n      <CastImage\n        src={\n          profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : placeholder\n        }\n        alt={name}\n      />\n      <div>\n        <CastTitle>{name}</CastTitle>\n        <CastDesc>Character: {character || 'No name'}</CastDesc>\n      </div>\n    </CastGalleryItemWrp>\n  );\n};\n\nCastItem.propTypes = {\n  cast: PropTypes.shape({\n    name: PropTypes.string,\n    character: PropTypes.string,\n    profile_path: PropTypes.string,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 20px;\n   margin: 0 auto;\n  \n  padding: 0;\n  list-style: none;\n  \n`;\n","import { getMovieCredits } from 'components/API/FetchApi';\nimport { CastItem } from 'components/CastItem/CastItem';\nimport { Loader } from 'components/Loader/Loader';\nimport { Section } from 'components/Section/Section';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastList } from './Cast.styled';\n\nconst Cast = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [casts, setCasts] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const controller = new AbortController();\n    setIsLoading(true);\n    const fetchMovieCast = async movieId => {\n      try {\n        const data = await getMovieCredits(movieId, {\n          signal: controller.signal,\n        });\n        setCasts(data.cast);\n        return data;\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovieCast(movieId);\n    return () => {\n      controller.abort();\n    };\n  }, [movieId]);\n\n  return (\n    <Section title={'Cast'}>\n      <CastList>\n        {casts.map(cast => (\n          <CastItem key={cast.id} cast={cast} />\n        ))}\n      </CastList>\n      {isLoading && <Loader />}\n    </Section>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const SectionMain=styled.section`\n  padding: 30px 0;\n`\nexport const Title = styled.h2`\n  text-align: center;\n  font-size: 32px;\n`;","import PropTypes from 'prop-types';\nimport { SectionMain, Title } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionMain>\n      <div>\n        <Title>{title}</Title>\n        {children}\n      </div>\n    </SectionMain>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n"],"names":["axios","API_KEY","getTrendingMovie","pageNumber","options","response","data","fetchSearchMovie","searchQuery","getMovieDetails","movieId","getMovieCredits","getMovieReviews","CastGalleryItemWrp","styled","CastImage","CastDesc","CastTitle","CastItem","cast","name","character","profile_path","src","placeholder","alt","CastList","useState","isLoading","setIsLoading","casts","setCasts","useParams","useEffect","controller","AbortController","fetchMovieCast","signal","console","log","abort","Section","title","map","id","Loader","SectionMain","Title","children"],"sourceRoot":""}