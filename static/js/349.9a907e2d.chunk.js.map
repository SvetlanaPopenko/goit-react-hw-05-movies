{"version":3,"file":"static/js/349.9a907e2d.chunk.js","mappings":"mQAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAClB,IAAMC,EAAU,mCAEVC,EAAgB,mCAAG,2GAAOC,EAAP,+BAAoB,EAAGC,EAAvB,yCAELJ,EAAAA,EAAAA,IAAA,mCACOC,EADP,iBACuBE,GAC5CC,GAJ0B,cAEtBC,EAFsB,yBAMrBA,EAASC,MANY,gCAQ5BC,QAAQC,IAAI,KAAMC,SARU,yDAAH,qDAYhBC,EAAgB,mCAAG,WAAOC,EAAaR,EAAWC,GAA/B,gGAELJ,EAAAA,EAAAA,IAAA,+BACGC,EADH,iCACmCU,EADnC,iBACuDR,EADvD,wBAErBC,GAJ0B,cAEtBC,EAFsB,yBAMrBA,EAASC,MANY,gCAQ5BC,QAAQC,IAAR,MAR4B,yDAAH,0DAYhBI,EAAe,mCAAG,WAAOC,EAAST,GAAhB,gGAEJJ,EAAAA,EAAAA,IAAA,gBACZa,EADY,oBACOZ,EADP,mBAErBG,GAJyB,cAErBC,EAFqB,yBAMpBA,EAASC,MANW,gCAQ3BC,QAAQC,IAAR,MAR2B,yDAAH,uD,sEC3BfM,E,QAAaC,GAAAA,OAAH,0lB,SCAVC,EAAS,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACE,SAACH,EAAD,CAAYG,QAASA,EAASC,KAAK,SAAnC,iBAIH,C,sGCLYC,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,8MAWVM,EAAeN,EAAAA,GAAAA,IAAD,0H,SCTdO,EAAmB,SAAC,GAE1B,IAAD,IADJC,MAASC,EACL,EADKA,MAAOC,EACZ,EADYA,KAAMC,EAClB,EADkBA,YAAaC,EAC/B,EAD+BA,aAAcC,EAC7C,EAD6CA,GAE3CC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACT,EAAD,WACE,SAACF,EAAD,CAAYY,GAAE,iBAAYH,GAAMI,MAAO,CAAEC,KAAMJ,GAA/C,UACE,4BACE,0BACE,gBACEK,IACER,EAAW,yCAC2BA,GAClC,GAENS,IAAKX,GAASC,OAGlB,4BACE,wBAAKD,GAASC,KACJ,4CAAgC,OAAZE,QAAY,IAAZA,OAAA,EAAAA,EAAcS,MAAM,EAAG,KAAM,wBAMtE,EC5BYC,EAAgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC9B,OACE,wBACGA,EAAOC,KAAI,SAAAhB,GAAK,OACf,SAACD,EAAD,CAAiCC,MAAOA,GAAjBA,EAAMK,GADd,KAKtB,C,gKCTYY,EAAQ,SAAC,GAAyB,IAAvBhB,EAAsB,EAAtBA,MAAOiB,EAAe,EAAfA,SAC7B,OACE,4BACE,wBAAKjB,IACJiB,IAGN,E,oBCgDD,EAlDa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAeK,EAAf,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAOE,EAAP,KAAaC,EAAb,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GAAoCL,EAAAA,EAAAA,UAAS,GAA7C,eAAOM,EAAP,KAAmBC,EAAnB,KAkCA,IA5BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBACvBL,GAAa,GACb,IAAMM,EAAU,mCAAG,WAAMT,GAAN,iGAEI1C,EAAAA,EAAAA,IAAiB0C,EAAM,CACxCU,OAAQH,EAAWG,SAHN,cAEThD,EAFS,OAKf2C,EAAc3C,EAAKiD,aACnBZ,GAAU,SAAAa,GACR,OAAgB,IAATZ,EAAatC,EAAKmD,QAAlB,kBAAgCD,IAAhC,OAA+ClD,EAAKmD,SAC5D,IACTlD,QAAQC,IAAIF,EAAKmD,SATM,kBAURnD,EAAKmD,SAVG,kCAafd,EAAU,IACVpC,QAAQC,IAAI,KAAMC,SAdH,yBAgBfsC,GAAa,GAhBE,6EAAH,sDAoBhB,OADAM,EAAWT,GACJ,WACLO,EAAWO,OACZ,CACF,GAAE,CAACd,IAEAN,EACF,OACE,6BACE,SAACE,EAAD,+BACA,2BAAQF,EAAOqB,SAAU,SAACtB,EAAA,EAAD,CAAeC,OAAQA,QAC7CA,EAAOqB,QAAUf,GAAQI,IAAc,SAAChC,EAAA,EAAD,CAAQC,QArCzC,WACb4B,GAAQ,SAAAe,GAAQ,OAAIA,EAAW,CAAf,GACjB,IAoCMd,IAAa,SAACe,EAAA,EAAD,MAIrB,C","sources":["components/API/FetchApi.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieGalleryItem/MovieGalleryItem.styled.jsx","components/MovieGalleryItem/MovieGalleryItem.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Title/Title.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = 'f983fc840eb543faba07dcbe6db19b0b';\n\nexport const getTrendingMovie = async (pageNumber = 1, options) => {\n  try {\n    const response = await axios.get(\n      `trending/all/day?api_key=${API_KEY}&page=${pageNumber}`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const fetchSearchMovie = async (searchQuery, pageNumber,options) => {\n  try {\n    const response = await axios.get(\n      `search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&page=${pageNumber}&include_adult=false`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}?api_key=${API_KEY}&language=en-US`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCredits = async (movieId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async (movieId, options) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\n      options\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from \"styled-components\";\n\nexport const LoadButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;","import { LoadButton } from './Button.styled';\n\nexport const Button = ({ onClick }) => {\n  return (\n    <LoadButton onClick={onClick} type=\"button\">\n      More\n    </LoadButton>\n  );\n};\n\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered}\n    `;\nexport const MovieContainer=styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-wrap: wrap;\n`","import { useLocation } from 'react-router-dom';\nimport { MovieContainer, StyledLink } from './MovieGalleryItem.styled';\nimport PropTypes from 'prop-types';\n\n\nexport const MovieGalleryItem = ({\n  movie: { title, name, poster_path, release_date, id },\n}) => {\n  const location = useLocation();\n  return (\n    <MovieContainer>\n      <StyledLink to={`movies/${id}`} state={{ from: location }}>\n        <div>\n          <div>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : ''\n              }\n              alt={title || name}\n            />\n          </div>\n          <div>\n            <h2>{title || name}</h2>\n                      <p>Release data : { release_date?.slice(0, 4) || 'not found'}</p>\n          </div>\n        </div>\n      </StyledLink>\n    </MovieContainer>\n  );\n};\n\nMovieGalleryItem.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    name: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    id: PropTypes.number,\n  }),\n};\n","import { MovieGalleryItem } from 'components/MovieGalleryItem/MovieGalleryItem';\nimport PropTypes from 'prop-types';\n\nexport const MoviesGallery = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <MovieGalleryItem key={movie.id} movie={movie}/>\n      ))}\n    </ul>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ),\n};","import PropTypes from 'prop-types';\n\nexport const Title = ({ title, children }) => {\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nTitle.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovie } from 'components/API/FetchApi';\nimport { Title } from 'components/Title/Title';\nimport { MoviesGallery } from 'components/MoviesGallery/MoviesGallery';\nimport { Button } from 'components/Button/Button';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n\n  const onLoad = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n\n  useEffect(() => {\n    const controller = new AbortController();\n    setIsLoading(true);\n    const fetchMovie = async page => {\n      try {\n        const data = await getTrendingMovie(page, {\n          signal: controller.signal,\n        });\n        setTotalPages(data.total_pages);\n        setMovies(prevMovies => {\n          return page === 1 ? data.results : [...prevMovies, ...data.results];\n        });\nconsole.log(data.results);\n        return data.results;\n        \n      } catch (error) {\n        setMovies([]);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovie(page);\n    return () => {\n      controller.abort();\n    };\n  }, [page]);\n\n  if (movies) {\n    return (\n      <main>\n        <Title>Trending movies</Title>\n        <div>{!!movies.length && <MoviesGallery movies={movies} />}</div>\n        {!!movies.length && page <= totalPages && <Button onClick={onLoad} />}\n        {isLoading && <Loader />}\n      </main>\n    );\n  }\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","getTrendingMovie","pageNumber","options","response","data","console","log","message","fetchSearchMovie","searchQuery","getMovieDetails","movieId","LoadButton","styled","Button","onClick","type","StyledLink","NavLink","MovieContainer","MovieGalleryItem","movie","title","name","poster_path","release_date","id","location","useLocation","to","state","from","src","alt","slice","MoviesGallery","movies","map","Title","children","useState","setMovies","page","setPage","isLoading","setIsLoading","totalPages","setTotalPages","useEffect","controller","AbortController","fetchMovie","signal","total_pages","prevMovies","results","abort","length","prevPage","Loader"],"sourceRoot":""}